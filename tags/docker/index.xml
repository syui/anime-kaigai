<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Docker on アニメ海外反応</title>
    <link>https://anime.syui.cf/tags/docker/index.xml</link>
    <description>Recent content in Docker on アニメ海外反応</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>ja-jp</language>
    <copyright>Powered by [Hugo](//gohugo.io). Theme by [term](https://gitlab.com/syui/hugo-theme-term).</copyright>
    <atom:link href="https://anime.syui.cf/tags/docker/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>仮想化入門</title>
      <link>https://anime.syui.cf/2016-10-23-virtual</link>
      <pubDate>Sun, 23 Oct 2016 00:00:00 +0000</pubDate>
      
      <guid>https://anime.syui.cf/2016-10-23-virtual</guid>
      <description>&lt;p&gt;主に、Dockerをイメージしてもらえればわかりやすいですが、Linuxに限らず仮想化全般をまとめます。&lt;/p&gt;

&lt;p&gt;&lt;/p&gt;

&lt;h2 id=&#34;はじめに&#34;&gt;はじめに&lt;/h2&gt;

&lt;p&gt;ここではVirtualBoxをはじめ、Dockerやrktなどの仮想化技術、コンテナ技術について紹介していきます。&lt;/p&gt;

&lt;p&gt;ちなみに、VirtualBoxとDockerは全く関係ないかというと、そうではありません。仮想化という点で2つのアプリは同じ分野に属します。&lt;/p&gt;

&lt;p&gt;また、macやWindowsの場合、昔はVirtualBoxイメージを用いてDocker(&lt;a href=&#34;http://boot2docker.io/&#34;&gt;boot2docker&lt;/a&gt;)を動かしていました(現在は&lt;a href=&#34;https://docs.docker.com/engine/installation/mac/&#34;&gt;Docker for Mac&lt;/a&gt;によってVirtualBoxは不要になっています)。VirtualBoxのようなものを用いてもDockerで実現したいことをやろうとすることは可能です。反対にDockerを用いてもVirtualBoxでやりたかったことを実現できるとは限りませんが。&lt;/p&gt;

&lt;p&gt;しかし、VirtualBoxとDocker、これらが全く同じものかというと、そうではありません。&lt;/p&gt;

&lt;p&gt;VirtualBoxは仮想環境でOSを動かすアプリ、Dockerはコンテナを動かすアプリです。&lt;/p&gt;

&lt;p&gt;ここでコンテナのイメージですが、一つのコンテナで一つのプロセス(アプリ)を実行するイメージです。&lt;/p&gt;

&lt;p&gt;つまり、VirtualBoxでは一つの仮想環境を作り、その仮想OS上でいくつものアプリを実行するイメージですが、Dockerは一つの仮想環境(コンテナ)を作り、そこで一つのアプリを実行するイメージです。&lt;/p&gt;

&lt;p&gt;これによってもし仮想環境が不要になった場合、OSごと削除しなければならないVirtualBoxと違い、コンテナの使い捨ては比較的容易になります。なぜなら、Dockerで動かしているコンテナはコンテナごとに一つの役割しか割り当てられていないことが多いからです。&lt;/p&gt;

&lt;h3 id=&#34;方針について&#34;&gt;方針について&lt;/h3&gt;

&lt;p&gt;当記事の方針の一つは、著者が後々利用しやすいように作っていく方針です。&lt;/p&gt;

&lt;p&gt;一部、表現等に正確ではないものも含まれると思いますが、この記事では正確さよりも分かりやすさを重視します。もし正確な情報が欲しければ、公式ドキュメントなど参照してください。&lt;/p&gt;

&lt;h3 id=&#34;著者のレベル&#34;&gt;著者のレベル&lt;/h3&gt;

&lt;p&gt;著者はコンピュータは全くの初心者です。一緒に勉強していきましょう。&lt;/p&gt;

&lt;h2 id=&#34;virtualbox&#34;&gt;VirtualBox&lt;/h2&gt;

&lt;h3 id=&#34;vagrant&#34;&gt;Vagrant&lt;/h3&gt;

&lt;p&gt;&lt;a href=&#34;https://www.vagrantup.com/&#34;&gt;Vagrant&lt;/a&gt;と言うものがあります。これはVirtualBoxをインストールしたときに入ってくる&lt;code&gt;VBox&lt;/code&gt;コマンドを使って、クラウドにあるイメージから簡単に環境を構築するためのツールです。設定ファイルを書けば様々な汎用的な設定も可能になります。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;$ vagrant init hashicorp/precise64
$ vagrant up
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;docker&#34;&gt;Docker&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://hub.docker.com&#34;&gt;Docker Hub&lt;/a&gt;というものがあります。Docker Hubとはコンテナイメージを置いてあるサイトのことで、Dockerではここにアップロードされているイメージを使って簡単にコンテナを動かすことができます。&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;# https://hub.docker.com/r/syui/docker-alpine-privoxy-block/
$ sudo docker run -d -p 8119:8119 syui/docker-alpine-privoxy-block

$ curl -sL -x localhost:8119 ipinfo.io
&lt;/code&gt;&lt;/pre&gt;

&lt;h2 id=&#34;rkt&#34;&gt;rkt&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://github.com/coreos/rkt&#34;&gt;rkt&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;systemd-nspawn&#34;&gt;systemd-nspawn&lt;/h2&gt;

&lt;p&gt;&lt;a href=&#34;https://wiki.archlinuxjp.org/index.php/Systemd-nspawn&#34;&gt;systemd-nspawn&lt;/a&gt;&lt;/p&gt;</description>
    </item>
    
  </channel>
</rss>